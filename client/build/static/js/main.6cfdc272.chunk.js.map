{"version":3,"sources":["components/layout/Navbar.js","components/layout/Footer.js","components/common/Pagination.js","components/books/BooksList.js","utils/paginate.js","components/layout/Dashboard.js","components/books/AddBook.js","components/books/EditBook.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Footer","Pagination","props","booksCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","map","page","key","href","onClick","BooksList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","onDeleteClick","bookId","axios","delete","then","res","setState","books","state","filter","book","_id","data","handlePageChange","_this2","get","catch","err","console","log","_this3","_this4","_this$state","booksList","items","pageNumber","startIndex","slice","take","value","paginate","title","author","genre","year","isbn","NavLink","to","concat","react_fontawesome_index_es","icon","common_Pagination","length","Component","Dashboard","books_BooksList","AddBook","onChange","e","defineProperty","target","name","onSubmit","preventDefault","newBook","post","history","push","htmlFor","type","required","EditBook","editedBook","match","params","id","library","add","faPlusCircle","faPencilAlt","faMinusCircle","faLongArrowAltLeft","App","BrowserRouter","layout_Navbar","Route","exact","path","component","layout_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cfdc272.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='navbar'>\r\n      <h1 className='navbar__heading'>Book App</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n      Book App 2019\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    \r\n    const { booksCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n    const pagesCount = Math.ceil(booksCount / pageSize);\r\n    if(pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav className='pagination'>\r\n        <ul className='pagination__list'>\r\n            { pages.map(page => (\r\n                <li key={page} \r\n                    className={ page === currentPage ? 'pagination__item pagination__item--active': 'pagination__item'}>\r\n                    <a className='pagination__link' \r\n                        href='#'\r\n                        onClick={() => onPageChange(page)}>\r\n                        {page}\r\n                    </a>\r\n                </li>\r\n            ))}\r\n           \r\n        </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default  Pagination","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Pagination from '../common/Pagination';\r\nimport { paginate } from '../../utils/paginate';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass BooksList extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      pageSize: 5,\r\n      currentPage: 1\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){ \r\n    this._isMounted = true;\r\n    axios.get('/api/books')\r\n      .then(res => {\r\n        this.setState({\r\n          books: res.data\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    axios.get('/api/books')\r\n    .then(res => {\r\n      if(this._isMounted) {\r\n        this.setState({\r\n          books: res.data\r\n        });\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  onDeleteClick = ( bookId) => { \r\n    axios.delete('/api/books/'+bookId)\r\n      .then(res => {\r\n        this.setState({\r\n          books: this.state.books.filter(book => book._id !== res.data._id)\r\n        })\r\n      })\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  }\r\n\r\n  render() {\r\n \r\n    const { books, pageSize, currentPage } = this.state;\r\n    const booksList = paginate(books, currentPage, pageSize);\r\n     \r\n    if(!books) return <p className='loading'>Loading...</p>;\r\n    return (\r\n      <div className='list'>\r\n        <table className='list__table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Author</th>\r\n              <th>Genre</th>\r\n              <th>Year</th>\r\n              <th>Pages</th>\r\n              <th>ISBN</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { booksList.map(book => (\r\n            <tr key={book._id}>\r\n              <td>{book.title}</td>\r\n              <td>{book.author}</td>\r\n              <td>{book.genre}</td>\r\n              <td>{book.year}</td>\r\n              <td>{book.pages}</td>\r\n              <td>{book.isbn}</td>\r\n              <td>\r\n                <NavLink className='button button--edit' to={`/edit/${book._id}`}>\r\n                  <FontAwesomeIcon className='icon' icon='pencil-alt'/>\r\n                  Edit\r\n                </NavLink>\r\n              </td>\r\n              <td>\r\n                <button \r\n                  className='button button--delete' \r\n                  onClick={ () => this.onDeleteClick(book._id)}>\r\n                  <FontAwesomeIcon className='icon' icon='minus-circle'/>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination \r\n          booksCount={books.length} \r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksList;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from 'react';\r\nimport BooksList from '../books/BooksList';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className='dashboard'>\r\n        <NavLink className='button button--add' to={`books/add`} >\r\n          <FontAwesomeIcon className='icon icon--add' icon=\"plus-circle\" />\r\n          Add book\r\n        </NavLink>\r\n      <BooksList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass AddBook extends Component {\r\n    state = {\r\n        title: '',\r\n        author: '',\r\n        genre: '',\r\n        year: '',\r\n        pages: '',\r\n        isbn: ''\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newBook = this.state;\r\n\r\n        axios.post('/api/books/add', newBook)\r\n          .then(res => console.log(res.data));\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n  render() {\r\n      const { title, author, genre, year, pages, isbn } = this.state;\r\n\r\n    return (\r\n      <div className='form'>\r\n        <NavLink className='button button--back' to ='/'>\r\n          <FontAwesomeIcon className='icon icon--back' icon='long-arrow-alt-left'/>\r\n          Back\r\n        </NavLink>\r\n          <div>\r\n            <form onSubmit={this.onSubmit}\r\n              className='form__container'\r\n            >\r\n              <div className='form__group'>\r\n                <label htmlFor='title'>Title</label>\r\n                <input \r\n                  type='text'\r\n                  name='title'\r\n                  value={title}\r\n                  onChange={this.onChange}\r\n                  className='form__input'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form__group'>\r\n                <label htmlFor='author'>Author</label>\r\n                <input \r\n                  type='text'\r\n                  name='author'\r\n                  value={author}\r\n                  onChange={this.onChange}\r\n                  className='form__input'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form__group'>\r\n                <label htmlFor='genre'>Genre</label>\r\n                <input \r\n                  type='text'\r\n                  name='genre'\r\n                  value={genre}\r\n                  onChange={this.onChange}\r\n                  className='form__input'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form__group'>\r\n                <label htmlFor='year'>Year</label>\r\n                <input \r\n                  type='number'\r\n                  name='year'\r\n                  value={year}\r\n                  onChange={this.onChange}\r\n                  className='form__input'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form__group'>\r\n                <label htmlFor='pages'>Pages</label>\r\n                <input \r\n                  type='number'\r\n                  name='pages'\r\n                  value={pages}\r\n                  onChange={this.onChange}\r\n                  className='form__input'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form__group'>\r\n                <label htmlFor='isbn'>ISBN</label>\r\n                <input \r\n                  type='number'\r\n                  name='isbn'\r\n                  value={isbn}\r\n                  onChange={this.onChange}\r\n                  className='form__input'\r\n                  required\r\n                />\r\n              </div>\r\n              <button className='button button--submit' type='submit'>Submit</button>\r\n            </form>\r\n          </div>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddBook","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass EditBook extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      author: '',\r\n      genre: '',\r\n      year: '',\r\n      pages: '',\r\n      isbn: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('/api/books/'+this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({\r\n          title: res.data.title,\r\n          author: res.data.author,\r\n          genre: res.data.genre,\r\n          year: res.data.year,\r\n          pages: res.data.pages,\r\n          isbn: res.data.isbn,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const editedBook = {\r\n      title: this.state.title,\r\n      author: this.state.author,\r\n      genre: this.state.genre,\r\n      year: this.state.year,\r\n      pages: this.state.pages,\r\n      isbn: this.state.isbn\r\n    };\r\n    axios.post('/api/books/edit/'+ this.props.match.params.id, editedBook)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { title, author, genre, year, pages, isbn } = this.state;\r\n\r\n    return (\r\n        <div className='form'>\r\n          <form onSubmit={this.onSubmit}\r\n            className='form__container'\r\n            >\r\n            <div className='form__group'>\r\n              <label htmlFor='title'>Title</label>\r\n              <input \r\n                type='text'\r\n                name='title'\r\n                value={title}\r\n                onChange={this.onChange}\r\n                className='form__input'\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form__group'>\r\n              <label htmlFor='author'>Author</label>\r\n              <input \r\n                type='text'\r\n                name='author'\r\n                value={author}\r\n                onChange={this.onChange}\r\n                className='form__input'\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form__group'>\r\n              <label htmlFor='genre'>Genre</label>\r\n              <input \r\n                type='text'\r\n                name='genre'\r\n                value={genre}\r\n                onChange={this.onChange}\r\n                className='form__input'\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form__group'>\r\n              <label htmlFor='year'>Year</label>\r\n              <input \r\n                type='number'\r\n                name='year'\r\n                value={year}\r\n                onChange={this.onChange}\r\n                className='form__input'\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form__group'>\r\n              <label htmlFor='pages'>Pages</label>\r\n              <input \r\n                type='number'\r\n                name='pages'\r\n                value={pages}\r\n                onChange={this.onChange}\r\n                className='form__input'\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form__group'>\r\n              <label htmlFor='isbn'>ISBN</label>\r\n              <input \r\n                type='number'\r\n                name='isbn'\r\n                value={isbn}\r\n                onChange={this.onChange}\r\n                className='form__input'\r\n                required\r\n              />\r\n            </div>\r\n            <button className='button button--submit' type='submit'>Submit</button>\r\n          </form>\r\n        </div>  \r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default EditBook;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faPlusCircle, faPencilAlt, faMinusCircle, faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Footer from './components/layout/Footer';\r\nimport Dashboard from './components/layout/Dashboard';\r\nimport AddBook from './components/books/AddBook';\r\nimport EditBook from './components/books/EditBook';\r\nimport './styles/styles.scss';\r\n\r\n\r\nlibrary.add(faPlusCircle, faPencilAlt, faMinusCircle, faLongArrowAltLeft);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <div className='app'>\r\n            <Navbar />\r\n              <Route exact path=\"/\" component={Dashboard} />\r\n              <Route path=\"/books/add\" component={AddBook} />\r\n              <Route path=\"/edit/:id\" component={EditBook} />\r\n            <Footer />\r\n          </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}